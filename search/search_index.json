{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Prologue","text":"<p>wait how did you get here</p> <p> Turtle2D is very much a work in progress, and is NOT ready for use in any form or fashion. You shouldn't even be here, honestly. This documentation is primarily so I can keep track of my own nonsense. This place is not a place of honor. No highly esteemed deed is commemorated here. Nothing valued is here.</p>"},{"location":"#introduction","title":"Introduction","text":"<p>hey</p>"},{"location":"custom-elements/lt-area/","title":"&lt;lt-area&gt;","text":"<p>The <code>&lt;lt-area&gt;</code> element, or Area, is custom element used to detect collisions in a non-disruptive way, then trigger events of code when ovelapped. For example, Area elements can be used to trigger Map transitions, detect when a player enters a particular section of a Map, or can be used for rough distance calculation by determining if one object is within a specific distance from another.</p>"},{"location":"custom-elements/lt-sprite/","title":"&lt;lt-sprite&gt;","text":"<p>The <code>&lt;lt-sprite&gt;</code> element, or Sprite, is custom element for dynamic game objects that can be solid, can move, or are animated. Sprite elements are often the base element for a player character, other NPCs, or objects that can be interacted with.</p> <p>Info</p> <p>If you want to create a game object that is static, or will be rendered having a repeated tiling image\u2014like walls, floors, or larger background images\u2014consider using a <code>&lt;lt-tile&gt;</code> instead.</p>"},{"location":"custom-elements/lt-tile/","title":"&lt;lt-tile&gt;","text":"<p>The <code>&lt;lt-tile&gt;</code> element, or Tile, is custom element for static game objects. Tile elements can be solid, and can have background images that repeat along the X axis, Y axis, or both. Tile elements are often used for buildings, backgrounds, or other large non-interactive sections of the game.</p> <p>Info</p> <p>If you want to create a game object that is dynamic, can move, or can animate\u2014like a player, NPC, or interactive object\u2014consider using a <code>&lt;lt-sprite&gt;</code> instead.</p>"},{"location":"quick-start/your-first-game/","title":"Your first game","text":""},{"location":"quick-start/your-first-game/#what-about-thing","title":"What about thing","text":""},{"location":"quick-start/your-first-game/#something-else","title":"Something else","text":""},{"location":"welcome/why/","title":"Why Turtle2D?","text":"<p>Info</p> <p>This section is not required to learn how to create games with Turtle2D, but may help you better understand some of the decision-making that went into designing and building the engine.</p> <p>Turtle2D is objectively worse than most, if not all, other game engines. It's probably the slowest and have fewer features than all other engines.</p> <p>Turtle2D was created for, and is built upon, a set of core principles. In no particular order:</p>"},{"location":"welcome/why/#making-games-is-for-everyone-everywhere","title":"Making games is for everyone, everywhere.","text":"<p>Neither expensive hardware nor dedicated space should be a prerequisite for building games. Turtle2D aims to work on any device that can run a modern web browser. Desktop PCs, laptops, tablets, even smartphones. (The engine itself was developed with a 10-year-old laptop.) The Editor can be used with a keyboard and mouse, trackpad, or touch/stylus controls. Make a game at your desk, on the couch, on the bus, in a park.</p>"},{"location":"welcome/why/#how-i-learned-to-stop-worrying-and-love-the-dom","title":"How I learned to stop worrying and love the DOM","text":"<p>Most HTML5-based game engines go to extreme lengths to avoid the DOM. They encapsulate the engine logic in Javascript, and the game's rendering in a <code>&lt;canvas&gt;</code> element. I get it. It does offer far better frame-to-frame performance and access to a lot of magic like WebGL. But even state of the art game engines pale in comparison to the flexibility and ease-of-use that modern web stack provides. A few examples:</p> <ul> <li>GUI - HTML and CSS are the best user interface tools mankind has ever created. CSS <code>flex</code> and <code>grid</code> offer fluid, responsive, and interactive layouts with very little code. Elements and their content can be bordered, shadowed, animated, or transformed with ease. No other game engine comes close.</li> <li>Vector graphics - Most game engines require plugins for vector graphic support. HTML and CSS generates scalable lines, rectangles, and circles with a couple lines of CSS. Not to mention, the browser has full native support for SVG rendering and animation.</li> <li>A mature DOM - thanks to decades of effort from some of the largest companies in human history, the Document Object Model is a polished system that inherently provides a tree-like structure for organizing elements, similar to most game engines, along with robust tooling for querying child/parent elements, creation and removal of elements, and event handling. Creating \"prefab\"-style reusable components by encapsulating markup, styles, and behavior together in a single HTML file allows for dynamic yet maintainable assets. The browser offers a lot, and Turtle2D leans into that.</li> </ul>"},{"location":"welcome/why/#the-best-that-1983-has-to-offer","title":"The best that 1983 has to offer","text":"<p>Turtle2D aims to allow people to create games of a similar fidelity to the 8-bit era. Of course, there are no hard restrictions\u2014you aren't bound to 240p resolution or 256 colors\u2014but Turtle2D offers no physics, no lighting, no shaders, basic box-driven collision detection. Games will be straightforward and limited in pizazz. </p>"},{"location":"welcome/why/#make-the-engine-assistive-not-prescriptive","title":"Make the Engine assistive, not prescriptive.","text":"<p>Turtle2D's engine and custom elements offer a fast, easy way to make \"typical\" 2D games. But these are not a requirement for making a Turtle2D game. For example, the <code>Input</code> manager has helpers for simple Sprite movement using WASD or a D-pad. But that can be ignored, modified, or removed easily.</p> <p>All Turtle2D games are, basically, websites with some helpful code and guidance to make it fun. Anything you can do with HTML, CSS, and Javascript can be used in making Turtle2D games.</p>"},{"location":"welcome/why/#make-making-games-stupidly-easy","title":"Make making games stupidly easy.","text":""},{"location":"welcome/why/#2-fast-is-more-important-than-good","title":"2. Fast is more important than good.","text":""}]}